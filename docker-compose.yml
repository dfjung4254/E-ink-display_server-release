# docker compose file
# Author: 정근화

version: "3.7"

services:
  # nginx reverse proxy 구축
  nginx:
    container_name: eink_nginx
    image: nginx:1.17.5
    ports: 
      - 80:80       # http
      - 1883:1883   # mqtt
    environment: 
      - TZ=Asia/Seoul
    # Nginx config 및 로그 저장 경로
    volumes:
      - ./conf/proxy/conf.d:/etc/nginx/conf.d
      - ./conf/proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./app_logs/nginx/:/var/log/nginx/
    depends_on: 
      - hivemq
      - api-express1
      - api-express2

  # mongo DB 컨테이너의 이름 : db
  db:
    container_name: eink_db
    image: mongo:4.2.1
    # DB 이미지 호스트 볼륨, config 및 로그 저장 경로
    volumes:
      - ./docker/data:/data/db
    environment: 
      - TZ=Asia/Seoul
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 3s
      timeout: 1s
      retries: 10
      start_period: 40s

  # fcm-push 앱 가동
  fcm:
    container_name: eink_fcm
    build:
      # 빌드할 디렉터리 경로
      context: ./containers/fcm-pusher
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - db
    links:
      - db
    volumes:
      - ./config:/root/config

  # MQTT broker 서버 가동
  hivemq: 
    container_name: eink_hivemq
    image: hivemq/hivemq3:3.4.1
    environment: 
      - TZ=Asia/Seoul

  # api-server1 : express + mqttbroker container
  api-express1: # express
    container_name: eink_express1
    build:
      context: ./containers/server-side
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - db
      - hivemq
    links:
      - db
      - hivemq
    volumes:
      - ./config:/root/config
  
  # api-server2
  api-express2:
    container_name: eink_express2
    build:
      context: ./containers/server-side
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - db
      - hivemq
    links:
      - db
      - hivemq
    volumes:
      - ./config:/root/config